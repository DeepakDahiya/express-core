# Copyright 2023 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/rust/cargo_crate.gni")

cargo_crate("lib") {
  crate_name = "rmp"
  epoch = "0.8"
  crate_type = "rlib"

  # Only for usage from third-party crates. Add the crate to
  # third_party.toml to use it from first-party code.
  visibility = [ "//express/third_party/rust/*" ]
  crate_root = "crate/src/lib.rs"
  sources = [
    "//express/third_party/rust/rmp/v0_8/crate/benches/bench.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/decode/bytes.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/decode/dec.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/decode/ext.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/decode/mod.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/decode/sint.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/decode/str.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/decode/uint.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/encode/bin.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/encode/buffer.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/encode/dec.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/encode/ext.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/encode/map.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/encode/mod.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/encode/sint.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/encode/str.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/encode/uint.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/encode/vec.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/errors.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/lib.rs",
    "//express/third_party/rust/rmp/v0_8/crate/src/marker.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/decode/array.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/decode/bin.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/decode/bool.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/decode/ext.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/decode/float.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/decode/map.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/decode/mod.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/decode/null.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/decode/sint.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/decode/string.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/decode/uint.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/encode/array.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/encode/bin.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/encode/bool.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/encode/ext.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/encode/float.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/encode/int.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/encode/map.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/encode/mod.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/encode/null.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/encode/string.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/mirror.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/func/mod.rs",
    "//express/third_party/rust/rmp/v0_8/crate/tests/lib.rs",
  ]
  inputs = [
    "//express/third_party/rust/rmp/v0_8/crate/CHANGELOG.md",
    "//express/third_party/rust/rmp/v0_8/crate/README.md",
  ]

  # Unit tests skipped. Generate with --with-tests to include them.
  build_native_rust_unit_tests = false
  edition = "2018"
  cargo_pkg_version = "0.8.11"
  cargo_pkg_authors = "Evgeny Safronov <division494@gmail.com>"
  cargo_pkg_name = "rmp"
  cargo_pkg_description = "Pure Rust MessagePack serialization implementation"
  library_configs -= [ "//build/config/compiler:chromium_code" ]
  library_configs += [ "//build/config/compiler:no_chromium_code" ]
  executable_configs -= [ "//build/config/compiler:chromium_code" ]
  executable_configs += [ "//build/config/compiler:no_chromium_code" ]
  deps = [
    "//express/third_party/rust/byteorder/v1:lib",
    "//express/third_party/rust/num_traits/v0_2:lib",
    "//express/third_party/rust/paste/v1:lib",
  ]
  features = [ "std" ]
}
